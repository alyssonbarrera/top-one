// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  VENDOR
  ADMIN
}

enum OrderStatus {
  PROCESSING
  SENT
  DELIVERED
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  role UserRole @default(VENDOR)

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  Order   Order[]
  Product Product[]
  Client  Client[]

  @@map("users")
}

model Product {
  id          String   @id @default(uuid())
  name        String
  description String
  price       Decimal
  discount    Decimal? @default(0)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String @map("owner_id")

  OrderItem OrderItem[]
  CartItem  CartItem[]

  @@map("products")
}

model Client {
  id      String @id @default(uuid())
  name    String
  email   String @unique
  phone   String
  address String

  createdByUserId String
  createdBy       User   @relation(fields: [createdByUserId], references: [id])

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  Order Order[]
  Cart  Cart[]

  @@map("clients")
}

model Order {
  id     String      @id @default(uuid())
  status OrderStatus @default(PROCESSING)

  vendorId String @map("vendor_id")
  vendor   User   @relation(fields: [vendorId], references: [id])

  clientId String @map("client_id")
  client   Client @relation(fields: [clientId], references: [id])

  totalPrice Decimal @map("total_price")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id String @id @default(uuid())

  orderId String @map("order_id")
  order   Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)

  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])

  quantity Int
  price    Decimal

  @@map("order_items")
}

model Cart {
  id String @id @default(uuid())

  client   Client @relation(fields: [clientId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  clientId String @unique @map("client_id")

  products CartItem[]

  @@map("carts")
}

model CartItem {
  id String @id @default(uuid())

  quantity Int

  cart   Cart   @relation(fields: [cartId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  cartId String @map("cart_id")

  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId String  @map("product_id")

  @@map("cart_items")
}
